# Spring Boot Core Properties
spring.profiles.default=dev
spring.application.name=SEQURD

# Logging Properties
logging.charset.console=UTF-8
logging.level.root=INFO
logging.level.web=TRACE
logging.level.org.springframework=INFO
logging.level.org.springframework.security=TRACE
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.stat=DEBUG

# Server Context Properties
server.port=8080
server.servlet.context-path=/sequrd
server.shutdown=graceful
server.servlet.encoding.charset=UTF-8
server.http2.enabled=false
server.max-http-request-header-size=8KB
server.compression.enabled=false
server.compression.mime-types=[text/html, text/xml, text/plain, text/css, text/javascript, application/javascript, application/json, application/xml]
server.compression.min-response-size=2KB

# Spring Security Properties
#spring.security.user.name=user
#spring.security.user.password=admin
#spring.security.user.roles=ADMIN

# SEQURD App Datasource Properties
app.datasource.url=jdbc:postgresql://localhost:5432/sequrd
app.datasource.username=kushagra_sharma
app.datasource.password=Root#131
app.datasource.configuration.maximum-pool-size=30

# Spring JPA Properties
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl-auto (none (default), create-only, drop, create, create-drop, validate, update)
# create ? Hibernate first drops existing tables, then creates new tables
# update ? the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
# create-drop ? similar to create, with the addition that Hibernate will drop the database after all operations are completed. Typically used for unit testing
# validate ? Hibernate only validates whether the tables and columns exist, otherwise it throws an exception
# none ? this value effectively turns off the DDL generation
spring.jpa.hibernate.ddl-auto=none

# Health Management Properties
management.endpoints.enabled-by-default=true
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=shutdown